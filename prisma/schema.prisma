datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id Int @id @default(autoincrement())

  // Discord snowflake IDs are 8 bytes in size (e.g. `uint64`).
  discordID BigInt @unique

  // We allow the end-user to customize their username. (It does not necessary have to match their
  // Discord username.)
  username String @unique

  // Normalization is needed to prevent having a user of e.g. Alice and Alic√®.
  normalizedUsername String @unique

  // Needed to ban malicious users, since Discord accounts are free.
  lastIP String

  datetimeCreated   DateTime @default(now())
  datetimeLastLogin DateTime @default(now())

  userStreaks UserStreaks[]
}

model UserStreaks {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userID], references: [id])
  userID Int

  // Matches the `PlayerType` enum: https://wofsauge.github.io/IsaacDocs/rep/enums/PlayerType.html
  character Int

  // Matches the `Goal` enum in "Goal.ts".
  goal String

  streakNumCurrent Int
  streakNumBest    Int

  @@unique([userID, character, goal])
}
